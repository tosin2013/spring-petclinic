# This example workflow will build container image
# of the application using source to image build
# startegy and push the image to ghcr.io (Image registry)

name: S2I build and push
on: [ push, workflow_dispatch, pull_request ]
env:
  IMAGE_TAGS: latest ${{ github.sha }}
  APP_NAME: petclinic
  IMAGE_REGISTRY: quay.io/takinosh/spring-petclinic
#  REGISTRY_PASSWORD: ${{ github.token }}
#  REGISTRY_USER: ${{ github.actor }}


jobs:
  build-and-push:
    runs-on: ubuntu-20.04
    name: Build and push to (Image registry)
    steps:
      # Checkout spring petclinic repository
      - name: Checkout
        uses: actions/checkout@v4

      # Setup S2I and build container image
      - name: Setup and Build
        id: build_image
        uses: redhat-actions/s2i-build@v2
        with:
          image: ${{ env.APP_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          builder_image: 'registry.access.redhat.com/openjdk/openjdk-11-rhel7'

      # Push image to the GitHub container registry
      - name: Push To GitHub container registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Run the built container
        run: |
          docker run -d --name test-container -p 8080:8080   ${{ steps.build_image.outputs.image }}:${{ steps.build_image.outputs.tags }}
          sleep 10  # Give some time for the app to start up

      - name: Print Docker logs
        run: |
          docker logs test-container
          
      - name: Test the running application
        run: |
          curl -vvv http://localhost:8080 
